# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
# routers
  :routerA1 => {
        :box_name => "centos/7",
        :net => [
		   {adapter: 2, auto_config: false, virtualbox__intnet: "lanA"}, # vlan 1,2; cost 10
		   {adapter: 3, auto_config: false, virtualbox__intnet: "netrA1"}, # vlan 10; cost 1
		   {adapter: 4, auto_config: false, virtualbox__intnet: "netrA2"}, # vlan 20; cost 40
                   #{ip: '192.168.10.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanA"}, # vlan 1,2; cost 
		   #{ip: '10.0.1.1', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA1"}, # vlan 10; cost 
		   #{ip: '10.0.5.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrA2"}, # vlan 20; cost 
                ]
  },
  :routerB1 => {
        :box_name => "centos/7",
        :net => [  
                   {ip: '192.168.11.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanB"}, # vlan 1,2; cost 10
                   {ip: '10.0.1.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA1"}, # vlan 10; cost 1
		   {ip: '10.0.3.1', adapter: 5, netmask: "255.255.255.252", virtualbox__intnet: "netrB1"}, # vlan 30; cost 5
                ]
  },
  :routerC1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.12.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanC"}, # vlan 1,2; cost 10
                   {ip: '10.0.5.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA2"}, # vlan 20; cost 
                   {ip: '10.0.3.2', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrB1"}, # vlan 30; cost 5
                ]
  },
# pc
#:President => {
#        :box_name => "centos/7",
#        :net => [
#                   {ip: '192.168.10.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanA"},
#                ]
#  },
#:VicePresident => {
#        :box_name => "centos/7",
#        :net => [
#                   {ip: '192.168.11.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanB"},
#                ]
#  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end
	
        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s

# routers
        when "routerA1"
	  box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum -y install epel-release net-tools quagga tcpdump
	    setenforce 0
            echo -e "net.ipv4.conf.all.forwarding=1\nnet.ipv4.conf.all.rp_filter=0" > /etc/sysctl.d/99-sysctl.conf && sysctl -p
	    echo -e "hostname routerA1\nlog file /var/log/quagga/zebra.log" > /etc/quagga/zebra.conf
	    echo -e "hostname ospfd\nlog file /var/log/quagga/ospfd.log" > /etc/quagga/ospfd.conf
	    chmod 0600 /etc/quagga/ospfd.conf && chown quagga. /etc/quagga/ospfd.conf
	    systemctl enable ospfd
	    echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
	    systemctl restart network && systemctl restart zebra && systemctl restart ospfd
          SHELL
	when "routerB1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum -y install epel-release net-tools quagga
            setenforce 0
	    echo -e "net.ipv4.conf.all.forwarding=1\nnet.ipv4.conf.all.rp_filter=0" > /etc/sysctl.d/99-sysctl.conf && sysctl -p
	    echo -e "hostname routerB1\nlog file /var/log/quagga/zebra.log" > /etc/quagga/zebra.conf
            echo -e "hostname ospfd\nlog file /var/log/quagga/ospfd.log" > /etc/quagga/ospfd.conf
	    chmod 0600 /etc/quagga/ospfd.conf && chown quagga. /etc/quagga/ospfd.conf
	    systemctl enable ospfd
	    echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            systemctl restart network && systemctl restart zebra && systemctl restart ospfd
	  SHELL
	when "routerC1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum -y install epel-release net-tools quagga
	    setenforce 0
	    echo -e "net.ipv4.conf.all.forwarding=1\nnet.ipv4.conf.all.rp_filter=0" > /etc/sysctl.d/99-sysctl.conf && sysctl -p
	    echo -e "hostname routerA1\nlog file /var/log/quagga/zebra.log" > /etc/quagga/zebra.conf
            echo -e "hostname ospfd\nlog file /var/log/quagga/ospfd.log" > /etc/quagga/ospfd.conf
	    chmod 0600 /etc/quagga/ospfd.conf && chown quagga. /etc/quagga/ospfd.conf
 	    systemctl enable ospfd
	    echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            systemctl restart network && systemctl restart zebra && systemctl restart ospfd
          SHELL
# pc
# 	when "President"
#	  box.vm.provider :virtualbox do |vb|
#            vb.customize ["modifyvm", :id, "--memory", "256"]
#          end
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
#            systemctl restart network
#          SHELL
#	when "VicePresident"
#          box.vm.provider :virtualbox do |vb|
#            vb.customize ["modifyvm", :id, "--memory", "256"]
#          end
#          box.vm.provision "shell", run: "always", inline: <<-SHELL
#            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
#            systemctl restart network 
#          SHELL
        end
      end
  end
end
