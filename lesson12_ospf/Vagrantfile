# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :routerA1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.10.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanA"},
		   {ip: '10.0.1.1', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA1"},
		   {ip: '10.0.5.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrA2"},
                ]
  },
  :routerB1 => {
        :box_name => "centos/7",
        :net => [  
                   {ip: '192.168.11.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanB"},
                   {ip: '10.0.1.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA1"},
                   {ip: '10.10.0.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrF"},
		   {ip: '10.0.3.1', adapter: 5, netmask: "255.255.255.252", virtualbox__intnet: "netrC1"},
                ]
  },
  :routerC1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.12.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanC"},
                   {ip: '10.0.3.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrC1"},
                   {ip: '10.0.4.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrD1"},
                ]
  },
  :routerD1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.13.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lanD"},
                   {ip: '10.0.5.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "netrA2"},
                   {ip: '10.10.0.2', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "netrF"},
                   {ip: '10.0.4.2', adapter: 5, netmask: "255.255.255.252", virtualbox__intnet: "netrD1"},
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end
	
        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "routerA1"
	  box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum -y install epel-release net-tools quagga
            echo net.ipv4.conf.all.forwarding=1 > /etc/sysctl.d/99-sysctl.conf && sysctl -p
	    echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
	    systemctl restart network
          SHELL
	when "routerB1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum -y install epel-release net-tools quagga
            echo net.ipv4.conf.all.forwarding=1 > /etc/sysctl.d/99-sysctl.conf && sysctl -p
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            systemctl restart network          
	  SHELL
	when "routerC1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum -y install epel-release net-tools quagga
            echo net.ipv4.conf.all.forwarding=1 > /etc/sysctl.d/99-sysctl.conf && sysctl -p
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            systemctl restart network
          SHELL
	when "routerD1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum -y install epel-release net-tools quagga
            echo net.ipv4.conf.all.forwarding=1 > /etc/sysctl.d/99-sysctl.conf && sysctl -p
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
            systemctl restart network
          SHELL
        end
      end
  end
end
